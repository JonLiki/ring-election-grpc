syntax = "proto3";

option java_package = "cs324.ring.election.grpc";
option java_outer_classname = "NodeProto";

service NodeService {
  rpc sendElection(ElectionRequest) returns (ElectionResponse);
  rpc sendLeader(LeaderRequest) returns (LeaderResponse);
  rpc register(RegisterRequest) returns (RegisterResponse);
  rpc setNext(NextPortRequest) returns (NextPortResponse);
  rpc ping(PingRequest) returns (PingResponse);
  rpc reportCrash(CrashReportRequest) returns (CrashReportResponse);
}

message ElectionRequest { int32 candidate_id = 1; int32 origin_id = 2; }
message ElectionResponse { int32 node_id = 1; }

message LeaderRequest { int32 leader_id = 1; int32 origin_id = 2; }
message LeaderResponse { int32 node_id = 1; }

message RegisterRequest { int32 node_id = 1; int32 port = 2; }
message RegisterResponse { int32 next_port = 1; }

message NextPortRequest { int32 next_port = 1; int32 from_register = 2; }
message NextPortResponse { int32 node_id = 1; }

message PingRequest { int32 from_port = 1; }
message PingResponse { int32 node_id = 1; }

message CrashReportRequest { int32 dead_port = 1; int32 reporter_id = 2; int32 reporter_port = 3; }
message CrashReportResponse { bool repaired = 1; string info = 2; }
